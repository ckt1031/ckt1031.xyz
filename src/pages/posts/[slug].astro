---
import '@/styles/post.css';

import type { InferGetStaticPropsType } from 'astro';
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import dayjs from 'dayjs';
import readingTimeModule from 'reading-time';
import ArticleSEO from '@/components/SEO/Article.astro';

import MainLayout from '@/layouts/main.astro';

export async function getStaticPaths() {
  const posts = await getCollection('posts');

  return posts.map(p => {
    const readingTime = readingTimeModule(p.body);
    const readingMinutes =
      readingTime.minutes >= 1 ? Math.round(readingTime.minutes) : 'Less than 1 ' + 'minutes';

    return {
      params: { slug: p.slug },
      props: { post: p, readingMinutes },
    };
  });
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { post, readingMinutes } = Astro.props;
const { Content } = await post.render();
---

<ArticleSEO
  includeSiteTitle
  title={post.data.title}
  description={post.data.description}
  author={['ckt1031']}
  published_time={dayjs(post.data.published).format('YYYY-MM-DDTHH:mm:ssZ')}
  tags={post.data.tags || []}
  section={post.data.tags ? post.data.tags[0] : 'post'}
  images={[post.data.heroImage?.src ?? '']}
/>
<MainLayout>
  <article class="mb-20 mt-5 w-full">
    <div class="mb-3 min-w-max border-b border-gray-300 dark:border-gray-600">
      <div class="mb-2">
        <h1 class="text-2xl font-bold md:text-3xl">{post.data.title}</h1>
        <p class="mt-2 text-gray-600 dark:text-gray-400">
          {dayjs(post.data.published).format('YYYY-MM-DD HH:mm (Z)')}
        </p>
        <p class="mt-1 italic text-slate-600 dark:text-slate-400">{readingMinutes}</p>
      </div>
      {
        post.data.heroImage && (
          <div class="relative mb-3 h-[250px] md:h-[450px]">
            <Image
              alt="Thumbnail"
              class="absolute h-full w-full rounded-md object-cover"
              src={post.data.heroImage}
            />
          </div>
        )
      }
    </div>
    <div class="prose-neutral blog-style prose max-w-full dark:prose-dark">
      <Content />
    </div>
    {
      post.data.tags && (
        <div class="base-border mt-7 border-t">
          <div class="mt-5">
            <span>Tags:</span>
            {post.data.tags.map((tag: string) => (
              <a
                class="base-border mr-2 rounded border bg-gray-200 px-1 py-0.5 dark:bg-gray-700 dark:text-white"
                href={`/posts/tags/${tag}`}
              >
                {tag}
              </a>
            ))}
          </div>
        </div>
      )
    }
  </article>
</MainLayout>
